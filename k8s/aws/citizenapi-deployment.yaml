apiVersion: apps/v1
kind: Deployment
metadata:
  name: citizenapi
  namespace: citizerve
  labels:
    app: citizenapi
spec:
  replicas: 1
  selector:
    matchLabels:
      app: citizenapi
  strategy: 
    type: Recreate
  template:
    metadata:
      name: citizenapi
      namespace: citizerve
      labels:
        app: citizenapi
      annotations:
        scrape: "true"
        prometheus.io/scrape: "true"    
    spec:
      containers:
        - name: citizenapi
          image: mpapas/citizenapi:awsV12
          imagePullPolicy: Always
          ports:
            - containerPort: 8081
            - containerPort: 3009
            - containerPort: 3019
          resources:
            limits:
              memory: 400Mi
            requests:
              memory: 200Mi
          env:
            - name: MONGO_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: citizerve-secret
                  key: mongo-connection-string          
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: citizerve-configmap
                  key: NODE_ENV
            - name: OTEL_EXPORTER_ZIPKIN_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: citizerve-configmap
                  key: OTEL_EXPORTER_ZIPKIN_ENDPOINT
            - name: USE_ZIPKIN
              valueFrom:
                configMapKeyRef:
                  name: citizerve-configmap
                  key: USE_ZIPKIN
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: citizerve-configmap
                  key: OTEL_EXPORTER_OTLP_ENDPOINT
            - name: OTEL_RESOURCE_ATTRIBUTES
              value: service.namespace=Citizerve,service.name=CitizenAPI
---
apiVersion: v1
kind: Service
metadata:
  name: citizenapi-service
  namespace: citizerve
  labels:
    app: citizenapi
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      name: web
    # - protocol: TCP
    #   port: 3009
    #   targetPort: 3009
    #   name: metrics
    # - protocol: TCP
    #   port: 3019
    #   targetPort: 3019
    #   name: otelmetrics
  selector:
    app: citizenapi
